[tool.poetry]
name = "text-to-image"
version = "0.1.0"
description = "Generate realistic images from text description"
license = "Apache-2.0"

authors = ["Victor I. Afolabi <javafolabi@gmail.com>"]
maintainers = [
  "Victor I. Afolabi <javafolabi@gmail.com>",
]

readme = "README.md"
repository = "https://github.com/victor-iyi/text-to-image"
keywords = ["image-generation", "stable-diffusion", "text-to-image"]

classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: Apache 2.0",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: POSIX",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

# Packages.
packages = [
  { include = "text_to_image", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.9"

# Tensor and dynamic neural net with strong GPU acceleration.
torch = { version = "^1.12.1", allow-prereleases = true }
# Provides pretrained diffusion models.
diffusers = "^0.3.0"
# State-of-the-art Machine Learning for JAX, PyTorch & TensorFlow.
# Provides APIs and tools to download and train pretrained models.
transformers = "^4.22.2"
# Fast, extensible progress meter.
tqdm = "^4.64.1"
# Python Imaging Library.
Pillow = "^9.2.0"

[tool.poetry.dev-dependencies]
# Automatically format Python code to PEP 8 style guide.
autopep8 = "*"
# A coverage plugin to provide sensible default settings.
covdefaults = { version  = "^2.2.0", optional = true }
# The modular source checker.
flake8 = "*"
# Optional static typing for Python.
mypy = { version = "^0.982", optional = true }
# Managing and maintaining multi-language pre-commit hooks.
pre-commit = "^2.20.0"
# Python style guide checker.
pydocstyle = "^6.1.1"
# Python linter.
pylint = "^2.15.3"
# Simple powerful testing with Python.
pytest = "^7.1.3"
# Python plugin for measuring coverage.
pytest-cov = { version = "^4.0.0", optional = true }
# Generic viirtualenv management and test cli tool.
tox = { version = "^3.26.0", optional = true }

# entry point.
[tool.poetry.scripts]
text-to-image = "main:main"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/victor-iyi/text-to-image/issues"

# Poetry build system. See: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Style hinting.
[tool.mypy]
files = "src"
mypy_path = "src"
namespace_packages = true
explicit_package_bases = true
strict = true
check_untyped_defs = true
ignore_missing_imports = true
disallow_any_generics = true
disallow_incomplete_defs = true
implicit_reexport = false
no_implicit_optional = true
show_error_codes = true
show_column_numbers = true
# show_error_content = true
warn_unused_configs = true
warn_unused_ignores = true
# warn_redundant_cast = true
warn_return_any = true
warn_unreachable = true

# Coverage report.
[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "if __name__ == .__main__.",
]

[tool.coverage.run]
plugin = "covdefaults"
